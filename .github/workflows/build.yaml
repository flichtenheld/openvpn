# The name of our workflow
name: Build
on:
  push:
  pull_request:

jobs:
  checkuncrustify:
    name: "Check code style with Uncrustify"
    # Ubuntu 22.04 has uncrustify 0.72_f
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y uncrustify
      - name: Checkout OpenVPN
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: openvpn
      - name: Show uncrustify version
        run: uncrustify --version
      - name: Run uncrustify
        run: ./dev-tools/reformat-all.sh
        working-directory: openvpn
      - name: Check for changes
        run: git diff --output=uncrustify-changes.patch
        working-directory: openvpn
      - name: Show changes on standard output
        run: git diff
        working-directory: openvpn
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: uncrustify-changes.patch
          path: 'openvpn/uncrustify-changes.patch'
      - name: Set job status
        run: test ! -s uncrustify-changes.patch
        working-directory: openvpn

  mingw:
    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x64]

    name: "gcc-mingw - ${{ matrix.arch }} - OSSL"
    runs-on: ubuntu-24.04
    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y mingw-w64 unzip build-essential wget python3-docutils man2html-base
      - name: Checkout OpenVPN
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: lukka/get-cmake@28983e0d3955dba2bb0a6810caae0c6cf268ec0c # v4.0.0
      - name: Restore from cache and install vcpkg
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
        with:
          vcpkgGitCommitId: 856505bb767458c99d8e3c3ed441f59a058d3687
          vcpkgJsonGlob: '**/mingw/vcpkg.json'

      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4 # v10.8
        with:
          configurePreset: mingw-${{ matrix.arch }}
          buildPreset: mingw-${{ matrix.arch }}
          buildPresetAdditionalArgs: "['--config Debug']"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: openvpn-mingw-${{ matrix.arch }}
          path: |
            ${{ github.workspace }}/out/build/mingw/${{ matrix.arch }}/Debug/*.exe
            ${{ github.workspace }}/out/build/mingw/${{ matrix.arch }}/Debug/*.dll
            !${{ github.workspace }}/out/build/mingw/${{ matrix.arch }}/Debug/test_*.exe

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: openvpn-mingw-${{ matrix.arch }}-tests
          path: |
            ${{ github.workspace }}/out/build/mingw/${{ matrix.arch }}/Debug/test_*.exe
            ${{ github.workspace }}/out/build/mingw/${{ matrix.arch }}/Debug/*.dll

  mingw-unittest:
    needs: [ mingw ]
    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x64]
        test: [argv, auth_token, buffer, cryptoapi, crypto, misc, ncp, packet_id, pkt, provider, ssl, tls_crypt, user_pass]

    runs-on: windows-latest
    name: "mingw unittest ${{ matrix.test }} - ${{ matrix.arch }} - OSSL"
    steps:
      - name: Checkout OpenVPN
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Retrieve mingw unittest
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: openvpn-mingw-${{ matrix.arch }}-tests
          path: unittests
      - name: Run ${{ matrix.test }} unit test
        run: ./unittests/test_${{ matrix.test }}.exe
        env:
          srcdir: "${{ github.workspace }}/tests/unit_tests/openvpn"

  msvc:
      strategy:
        fail-fast: false
        matrix:
          arch: [amd64, x86, arm64, amd64-clang, x86-clang]

      name: "msbuild - ${{ matrix.arch }} - openssl"
      env:
        BUILD_CONFIGURATION: Release

      runs-on: windows-latest
      steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: lukka/get-cmake@28983e0d3955dba2bb0a6810caae0c6cf268ec0c # v4.0.0

      - name: Install rst2html
        run: python -m pip install --upgrade pip docutils

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
        with:
          vcpkgGitCommitId: 856505bb767458c99d8e3c3ed441f59a058d3687
          vcpkgJsonGlob: '**/windows/vcpkg.json'

      - name: Run CMake with vcpkg.json manifest (NO TESTS)
        uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4 # v10.8
        if: ${{ matrix.arch == 'arm64' }}
        with:
          configurePreset: win-${{ matrix.arch }}-release
          buildPreset: win-${{ matrix.arch }}-release

      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4 # v10.8
        if: ${{ matrix.arch != 'arm64' }}
        with:
          configurePreset: win-${{ matrix.arch }}-release
          buildPreset: win-${{ matrix.arch }}-release
          testPreset: win-${{ matrix.arch }}-release
          testPresetAdditionalArgs: "['--output-on-failure']"

      - name: DEBUG
        run: grep -r UNIT_TEST_SOURCEDIR out

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: openvpn-msvc-${{ matrix.arch }}
          path: |
            ${{ github.workspace }}/out/**/*.exe
            ${{ github.workspace }}/out/**/*.dll
            !${{ github.workspace }}/out/**/test_*.exe
            !${{ github.workspace }}/out/**/CMakeFiles/**
            !${{ github.workspace }}/out/**/vcpkg_installed/**
